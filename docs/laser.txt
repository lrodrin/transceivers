Help on module laser:

NAME
    laser

FILE
    /root/restAPI/lib/laser.py

CLASSES
    Laser
    
    class Laser
     |  This is a class for Laser configuration.
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |      The constructor for Laser class.
     |  
     |  checkerror(self)
     |  
     |  close(self)
     |  
     |  enable(self, ch, stat=False)
     |      Enable / Disable Laser
     |      
     |      :param ch: channel
     |      :param stat: status
     |      :type ch: int
     |      :type stat: bool
     |  
     |  open(self)
     |      The function to initialize the Laser default parameters:
     |          - Set IP address of GPIB-ETHERNET
     |          - Set GPIB address
     |          - Set mode as CONTROLLER
     |          - Set GPIB address
     |  
     |  power(self, ch, power)
     |      Define power in dBm
     |      
     |      :param ch: channel
     |      :param power: power
     |      :type ch: int
     |      :type power: float
     |  
     |  status(self, ch)
     |          - Check status (enable/disable) and put it into the variable 'stat' (True/False)
     |          - Check wavelength and put it into the variable 'lambda0' in nm
     |          - Check power and put it into the variable 'power' in dBm (-60 indicates DISABLED)
     |      
     |      :param ch: channel
     |      :type ch: int
     |      :rtype: list
     |      :return: status, wavelength, power
     |  
     |  test(self)
     |      Just as test, ask for instrument ID according to SCPI API
     |      
     |      :return: s
     |  
     |  wavelength(self, ch, lambda0)
     |      Define wavelength in nm
     |      
     |      :param ch: channel
     |      :param lambda0: wavelength
     |      :type ch: int
     |      :type lambda0: float

DATA
    print_function = _Feature((2, 6, 0, 'alpha', 2), (3, 0, 0, 'alpha', 0)...


