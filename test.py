import os
from os import sys, path

import numpy as np
from pyangbind.lib import pybindJSON
from lxml import etree
from pyangbind.lib.serialise import pybindIETFXMLDecoder

from Netconf.bindings import bindingConfiguration

sys.path.append(path.dirname(path.dirname(path.abspath(__file__))))

__author__ = "Laura Rodriguez Navas <laura.rodriguez@cttc.cat>"
__copyright__ = "Copyright 2018, CTTC"

# print(sys.executable)
# print(os.getcwd())

XML = etree.parse("out_create.xml")
new_xml = pybindIETFXMLDecoder.decode(etree.tostring(XML), bindingConfiguration,
                                      "blueSPACE-DRoF-configuration")

SNR = [161.60757158140484, 188.43625376594966, 197.40068838176194, 248.88565781298925, 99.85014674537678,
       182.18537492979385, 94.82240593318315, 98.61560950571102, 14.474763543039478, 10.509337101093653,
       105.01124394289869, 108.59640576158338, 130.37325229905528, 138.85299150732303, 237.8616268928266,
       149.61767735968584, 211.62125744054862, 216.34785450521764, 197.8644931940901, 188.69946467326272,
       137.79507876879399, 278.3534528909011, 260.6995427086646, 169.14964068685543, 183.95662698301396,
       226.01084785015638, 173.19265675971138, 154.19554100308702, 252.69173434453575, 261.28912888926664,
       244.95323829831182, 196.9076581540677, 163.74756105340558, 142.03530577482917, 159.7918090192659,
       142.5806622443602, 160.85573815844842, 112.66421316799256, 172.91379446163552, 171.12931810275282,
       107.07228212086379, 225.95667928786315, 118.9753845043526, 154.2862950136351, 188.49682787311454,
       185.84794226877648, 255.7350402607361, 156.7308225007774, 136.64091597368775, 299.2923644207184,
       209.27630362759837, 184.09159671062145, 147.4373738437743, 154.56748277652838, 128.75917121342542,
       210.32885194145553, 191.24999346318984, 148.81862380635863, 117.57229911542963, float('nan'), 146.0728477785745,
       184.8081824892102, 220.99485347155024, 238.01722571551778, 223.47510669300883, 92.14076199724487,
       205.65585393194846, 162.00667540835033, 157.89008495217874, 227.3197789048639, 154.50089723441417,
       121.89278466483492, 176.7203166073522, 237.47198530055488, 200.6125381521272, 188.57682563510951,
       110.75545543332979, 174.11723279619486, 196.82613953691617, 194.71652514473737, 204.8841587123609,
       156.54759237259853, 232.1183182516773, 184.84475554236, 231.37268449452586, 214.50190372665406,
       214.39273178540134, 204.29287225391522, 253.05499421637919, 237.56541540104223, 224.03512263431557,
       254.2499594616316, 181.99485274613116, 232.6079268814412, 208.64891880212116, 199.30147564236393,
       242.2388347603547, 175.6578680802599, 88.52902345944105, 186.81974251077654, 154.35852267112023,
       163.99576153590516, 189.30479611035773, 181.34542635128435, 98.66082017129273, 196.3838417726277,
       201.42021911393675, 261.1406069696442, 199.59417175357416, 200.62757210008945, 130.18271623691663,
       35.23751380154696, 185.57294963154862, 141.13669523535702, 244.21756648135815, 157.60777755224407,
       274.82214537849234, 273.6062703103947, 157.90637627801752, 259.4307289018541, 148.94055238209796,
       296.541023560001, 230.61704698756049, 186.8990882132581, 143.89158490443165, 128.20601742668788,
       95.81114334801816, 132.18266371049216, 288.3692243851866, 137.8967943460935, 168.4867196935415,
       181.02256175757475, 157.67629908880403, 165.39899727465874, 162.52468632388727, 176.02617295693938,
       199.5809633893354, 174.07326890454976, 198.55327439044987, 159.5803876421764, 150.01362221338528,
       168.11138989108503, 140.94377467408333, 215.92764192666405, 122.84194602065766, 178.83859051159283,
       242.873583031537, 166.0190493153046, 263.05248816543474, 239.16009217449692, 123.85565870145743,
       272.89060631012495, 102.71385258518035, 261.02520742362356, 233.95965943334113, 138.27651883384112,
       110.72050671128302, 135.90442056867147, 143.64674962029767, 149.18648752516683, float('nan'), float('nan')]

for i, value in enumerate(new_xml.DRoF_configuration.monitor.iteritems(), start=1):
       if np.math.isnan(SNR[i - 1]):
              value[1]._set_SNR(np.format_float_positional(1e-9))
       else:
              value[1]._set_SNR(174.07326890454976)

print(pybindJSON.dumps(new_xml))
